{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","setState","value","handleSubmit","preventDefault","onAddContact","props","this","onSubmit","htmlFor","type","onChange","Component","ContactList","contacts","map","item","key","id","App","addContact","contactToAdd","shortid","generate","prevState","ReactDOM","render","document","getElementById"],"mappings":"6PAGqBA,E,2MAKnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IACXH,EAASG,EAAEC,OAAXJ,KACR,EAAKK,SAAL,eAAiBL,EAAOG,EAAEC,OAAOE,S,EAGnCC,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,IAEVR,EAAS,EAAKD,MAAdC,MAERS,EADyB,EAAKC,MAAtBD,cACKT,GAEb,EAAKK,SAAS,CAAEL,KAAM,M,wEAGd,IAAD,EACkBW,KAAKZ,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,oCACE,0BAAMW,SAAUD,KAAKJ,cACnB,2BACE,2BAAOM,QAAQ,QAAf,OAEE,2BACEb,KAAK,OACLc,KAAK,OACLC,SAAUJ,KAAKT,aACfI,MAAON,MAIb,2BACE,2BAAOa,QAAQ,QAAf,SAEE,2BACEb,KAAK,SACLc,KAAK,SACLC,SAAUJ,KAAKT,aACfI,MAAOL,MAIb,4BAAQa,KAAK,UAAb,qB,GApD+BE,aCwB1BC,EAxBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,4BACGA,EAASC,KAAI,SAAAC,GAAI,OAChB,wBAAIC,IAAKD,EAAKE,IACXF,EAAKpB,KADR,KACgBoB,EAAKnB,aCHRsB,E,2MACnBxB,MAAQ,CACNmB,SAAU,I,EAGZM,WAAa,SAAAxB,GACX,IAAMyB,EAAe,CACnBzB,OACAsB,GAAII,IAAQC,WACZ1B,OAAQ,IAGV,EAAKI,UAAS,SAAAuB,GAAS,MAAK,CAC1BV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BO,S,wEAI5B,IACAP,EAAaP,KAAKZ,MAAlBmB,SAER,OACE,6BACE,yCACA,kBAAC,EAAD,CAAaT,aAAcE,KAAKa,aAChC,wCACA,kBAAC,EAAD,CAAaN,SAAUA,S,GAzBEF,aCDjCa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.31cf1102.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name } = e.target;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { onAddContact } = this.props;\n    onAddContact(name);\n\n    this.setState({ name: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <label htmlFor=\"true\">\n              Name\n              <input\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={name}\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"true\">\n              Number\n              <input\n                name=\"number\"\n                type=\"number\"\n                onChange={this.handleChange}\n                value={number}\n              />\n            </label>\n          </p>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\n// ContactForm.propTypes = {\n//   onAddContact: PropTypes.shape(PropTypes.func.isRequired).isRequired,\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(item => (\n        <li key={item.id}>\n          {item.name} :{item.number}\n          {/* <input\n            checked={el.completed}\n            type=\"checkbox\"\n            onChange={() => onUpdate(el.id)}\n          /> */}\n          {/* <button type=\"button\" onClick={() => onDelete(el.id)}>\n            delete\n          </button> */}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.func).isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n  };\n\n  addContact = name => {\n    const contactToAdd = {\n      name,\n      id: shortid.generate(),\n      number: '',\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contactToAdd],\n    }));\n  };\n\n  render() {\n    const { contacts } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <ContactList contacts={contacts} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}